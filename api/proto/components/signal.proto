syntax = "proto3";

package components;

option go_package = "/components";

import "components/tracked.proto";

message Signal {
  optional FrequencyCenter frequencyCenter = 1;
  optional FrequencyRange frequencyRange = 2;
  optional double bandwidthHz = 3;
  optional double signalToNoiseRatio = 4;
  optional LineOfBearing lineOfBearing = 5;
  optional Fixed fixed = 6;
  repeated EmitterNotation emitterNotations = 7;
  optional double pulseWidthS = 8;
  optional PulseRepetitionInterval pulseRepetitionInterval = 9;
  optional ScanCharacteristics scanCharacteristics = 10;
}

message FrequencyCenter {
  optional FrequencyHz frequencyHz = 1;
}

message FrequencyRange {
  optional MinimumFrequencyRangeHz minimumFrequencyRangeHz = 1;
  optional MaximumFrequencyRangeHz maximumFrequencyRangeHz = 2;
}

message Fixed {}

message EmitterNotation {
  optional string emitterNotation = 1;
  optional double confidence = 2;
}

message PulseRepetitionInterval {
  optional PulseRepetitionIntervalS pulseRepetitionIntervalS = 1;
}

message PulseRepetitionIntervalS {
  optional double value = 1;
  optional double sigma = 2;
}

message ScanCharacteristics {
  optional ScanType scanType = 1;
  optional double scanPeriodS = 2;
}

enum ScanType {
  SCAN_TYPE_INVALID = 0;
  SCAN_TYPE_CIRCULAR = 1;
  SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_SECTOR = 2;
  SCAN_TYPE_BIDIRECTIONAL_VERTICAL_SECTOR = 3;
  SCAN_TYPE_NON_SCANNING = 4;
  SCAN_TYPE_IRREGULAR = 5;
  SCAN_TYPE_CONICAL = 6;
  SCAN_TYPE_LOBE_SWITCHING = 7;
  SCAN_TYPE_RASTER = 8;
  SCAN_TYPE_CIRCULAR_VERTICAL_SECTOR = 9;
  SCAN_TYPE_CIRCULAR_CONICAL = 10;
  SCAN_TYPE_SECTOR_CONICAL = 11;
  SCAN_TYPE_AGILE_BEAM = 12;
  SCAN_TYPE_UNIDIRECTIONAL_VERTICAL_SECTOR = 13;
  SCAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTOR = 14;
  SCAN_TYPE_UNIDIRECTIONAL_SECTOR = 15;
  SCAN_TYPE_BIDIRECTIONAL_SECTOR = 16;
}

message FrequencyHz {
  optional double value = 1;
  optional double sigma = 2;
}

message MinimumFrequencyRangeHz {
  optional FrequencyHz frequencyHz = 1;
}

message MaximumFrequencyRangeHz {
  optional FrequencyHz frequencyHz = 1;
}
