// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: components/signal.proto

package components

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScanType int32

const (
	ScanType_SCAN_TYPE_INVALID                          ScanType = 0
	ScanType_SCAN_TYPE_CIRCULAR                         ScanType = 1
	ScanType_SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_SECTOR  ScanType = 2
	ScanType_SCAN_TYPE_BIDIRECTIONAL_VERTICAL_SECTOR    ScanType = 3
	ScanType_SCAN_TYPE_NON_SCANNING                     ScanType = 4
	ScanType_SCAN_TYPE_IRREGULAR                        ScanType = 5
	ScanType_SCAN_TYPE_CONICAL                          ScanType = 6
	ScanType_SCAN_TYPE_LOBE_SWITCHING                   ScanType = 7
	ScanType_SCAN_TYPE_RASTER                           ScanType = 8
	ScanType_SCAN_TYPE_CIRCULAR_VERTICAL_SECTOR         ScanType = 9
	ScanType_SCAN_TYPE_CIRCULAR_CONICAL                 ScanType = 10
	ScanType_SCAN_TYPE_SECTOR_CONICAL                   ScanType = 11
	ScanType_SCAN_TYPE_AGILE_BEAM                       ScanType = 12
	ScanType_SCAN_TYPE_UNIDIRECTIONAL_VERTICAL_SECTOR   ScanType = 13
	ScanType_SCAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTOR ScanType = 14
	ScanType_SCAN_TYPE_UNIDIRECTIONAL_SECTOR            ScanType = 15
	ScanType_SCAN_TYPE_BIDIRECTIONAL_SECTOR             ScanType = 16
)

// Enum value maps for ScanType.
var (
	ScanType_name = map[int32]string{
		0:  "SCAN_TYPE_INVALID",
		1:  "SCAN_TYPE_CIRCULAR",
		2:  "SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_SECTOR",
		3:  "SCAN_TYPE_BIDIRECTIONAL_VERTICAL_SECTOR",
		4:  "SCAN_TYPE_NON_SCANNING",
		5:  "SCAN_TYPE_IRREGULAR",
		6:  "SCAN_TYPE_CONICAL",
		7:  "SCAN_TYPE_LOBE_SWITCHING",
		8:  "SCAN_TYPE_RASTER",
		9:  "SCAN_TYPE_CIRCULAR_VERTICAL_SECTOR",
		10: "SCAN_TYPE_CIRCULAR_CONICAL",
		11: "SCAN_TYPE_SECTOR_CONICAL",
		12: "SCAN_TYPE_AGILE_BEAM",
		13: "SCAN_TYPE_UNIDIRECTIONAL_VERTICAL_SECTOR",
		14: "SCAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTOR",
		15: "SCAN_TYPE_UNIDIRECTIONAL_SECTOR",
		16: "SCAN_TYPE_BIDIRECTIONAL_SECTOR",
	}
	ScanType_value = map[string]int32{
		"SCAN_TYPE_INVALID":                          0,
		"SCAN_TYPE_CIRCULAR":                         1,
		"SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_SECTOR":  2,
		"SCAN_TYPE_BIDIRECTIONAL_VERTICAL_SECTOR":    3,
		"SCAN_TYPE_NON_SCANNING":                     4,
		"SCAN_TYPE_IRREGULAR":                        5,
		"SCAN_TYPE_CONICAL":                          6,
		"SCAN_TYPE_LOBE_SWITCHING":                   7,
		"SCAN_TYPE_RASTER":                           8,
		"SCAN_TYPE_CIRCULAR_VERTICAL_SECTOR":         9,
		"SCAN_TYPE_CIRCULAR_CONICAL":                 10,
		"SCAN_TYPE_SECTOR_CONICAL":                   11,
		"SCAN_TYPE_AGILE_BEAM":                       12,
		"SCAN_TYPE_UNIDIRECTIONAL_VERTICAL_SECTOR":   13,
		"SCAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTOR": 14,
		"SCAN_TYPE_UNIDIRECTIONAL_SECTOR":            15,
		"SCAN_TYPE_BIDIRECTIONAL_SECTOR":             16,
	}
)

func (x ScanType) Enum() *ScanType {
	p := new(ScanType)
	*p = x
	return p
}

func (x ScanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScanType) Descriptor() protoreflect.EnumDescriptor {
	return file_components_signal_proto_enumTypes[0].Descriptor()
}

func (ScanType) Type() protoreflect.EnumType {
	return &file_components_signal_proto_enumTypes[0]
}

func (x ScanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScanType.Descriptor instead.
func (ScanType) EnumDescriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{0}
}

type Signal struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	FrequencyCenter         *FrequencyCenter         `protobuf:"bytes,1,opt,name=frequencyCenter,proto3,oneof" json:"frequencyCenter,omitempty"`
	FrequencyRange          *FrequencyRange          `protobuf:"bytes,2,opt,name=frequencyRange,proto3,oneof" json:"frequencyRange,omitempty"`
	BandwidthHz             *float64                 `protobuf:"fixed64,3,opt,name=bandwidthHz,proto3,oneof" json:"bandwidthHz,omitempty"`
	SignalToNoiseRatio      *float64                 `protobuf:"fixed64,4,opt,name=signalToNoiseRatio,proto3,oneof" json:"signalToNoiseRatio,omitempty"`
	LineOfBearing           *LineOfBearing           `protobuf:"bytes,5,opt,name=lineOfBearing,proto3,oneof" json:"lineOfBearing,omitempty"`
	Fixed                   *Fixed                   `protobuf:"bytes,6,opt,name=fixed,proto3,oneof" json:"fixed,omitempty"`
	EmitterNotations        []*EmitterNotation       `protobuf:"bytes,7,rep,name=emitterNotations,proto3" json:"emitterNotations,omitempty"`
	PulseWidthS             *float64                 `protobuf:"fixed64,8,opt,name=pulseWidthS,proto3,oneof" json:"pulseWidthS,omitempty"`
	PulseRepetitionInterval *PulseRepetitionInterval `protobuf:"bytes,9,opt,name=pulseRepetitionInterval,proto3,oneof" json:"pulseRepetitionInterval,omitempty"`
	ScanCharacteristics     *ScanCharacteristics     `protobuf:"bytes,10,opt,name=scanCharacteristics,proto3,oneof" json:"scanCharacteristics,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Signal) Reset() {
	*x = Signal{}
	mi := &file_components_signal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{0}
}

func (x *Signal) GetFrequencyCenter() *FrequencyCenter {
	if x != nil {
		return x.FrequencyCenter
	}
	return nil
}

func (x *Signal) GetFrequencyRange() *FrequencyRange {
	if x != nil {
		return x.FrequencyRange
	}
	return nil
}

func (x *Signal) GetBandwidthHz() float64 {
	if x != nil && x.BandwidthHz != nil {
		return *x.BandwidthHz
	}
	return 0
}

func (x *Signal) GetSignalToNoiseRatio() float64 {
	if x != nil && x.SignalToNoiseRatio != nil {
		return *x.SignalToNoiseRatio
	}
	return 0
}

func (x *Signal) GetLineOfBearing() *LineOfBearing {
	if x != nil {
		return x.LineOfBearing
	}
	return nil
}

func (x *Signal) GetFixed() *Fixed {
	if x != nil {
		return x.Fixed
	}
	return nil
}

func (x *Signal) GetEmitterNotations() []*EmitterNotation {
	if x != nil {
		return x.EmitterNotations
	}
	return nil
}

func (x *Signal) GetPulseWidthS() float64 {
	if x != nil && x.PulseWidthS != nil {
		return *x.PulseWidthS
	}
	return 0
}

func (x *Signal) GetPulseRepetitionInterval() *PulseRepetitionInterval {
	if x != nil {
		return x.PulseRepetitionInterval
	}
	return nil
}

func (x *Signal) GetScanCharacteristics() *ScanCharacteristics {
	if x != nil {
		return x.ScanCharacteristics
	}
	return nil
}

type FrequencyCenter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrequencyHz   *FrequencyHz           `protobuf:"bytes,1,opt,name=frequencyHz,proto3,oneof" json:"frequencyHz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequencyCenter) Reset() {
	*x = FrequencyCenter{}
	mi := &file_components_signal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyCenter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyCenter) ProtoMessage() {}

func (x *FrequencyCenter) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyCenter.ProtoReflect.Descriptor instead.
func (*FrequencyCenter) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{1}
}

func (x *FrequencyCenter) GetFrequencyHz() *FrequencyHz {
	if x != nil {
		return x.FrequencyHz
	}
	return nil
}

type FrequencyRange struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	MinimumFrequencyRangeHz *MinimumFrequencyRangeHz `protobuf:"bytes,1,opt,name=minimumFrequencyRangeHz,proto3,oneof" json:"minimumFrequencyRangeHz,omitempty"`
	MaximumFrequencyRangeHz *MaximumFrequencyRangeHz `protobuf:"bytes,2,opt,name=maximumFrequencyRangeHz,proto3,oneof" json:"maximumFrequencyRangeHz,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FrequencyRange) Reset() {
	*x = FrequencyRange{}
	mi := &file_components_signal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyRange) ProtoMessage() {}

func (x *FrequencyRange) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyRange.ProtoReflect.Descriptor instead.
func (*FrequencyRange) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{2}
}

func (x *FrequencyRange) GetMinimumFrequencyRangeHz() *MinimumFrequencyRangeHz {
	if x != nil {
		return x.MinimumFrequencyRangeHz
	}
	return nil
}

func (x *FrequencyRange) GetMaximumFrequencyRangeHz() *MaximumFrequencyRangeHz {
	if x != nil {
		return x.MaximumFrequencyRangeHz
	}
	return nil
}

type Fixed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fixed) Reset() {
	*x = Fixed{}
	mi := &file_components_signal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fixed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fixed) ProtoMessage() {}

func (x *Fixed) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fixed.ProtoReflect.Descriptor instead.
func (*Fixed) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{3}
}

type EmitterNotation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EmitterNotation *string                `protobuf:"bytes,1,opt,name=emitterNotation,proto3,oneof" json:"emitterNotation,omitempty"`
	Confidence      *float64               `protobuf:"fixed64,2,opt,name=confidence,proto3,oneof" json:"confidence,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EmitterNotation) Reset() {
	*x = EmitterNotation{}
	mi := &file_components_signal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmitterNotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitterNotation) ProtoMessage() {}

func (x *EmitterNotation) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitterNotation.ProtoReflect.Descriptor instead.
func (*EmitterNotation) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{4}
}

func (x *EmitterNotation) GetEmitterNotation() string {
	if x != nil && x.EmitterNotation != nil {
		return *x.EmitterNotation
	}
	return ""
}

func (x *EmitterNotation) GetConfidence() float64 {
	if x != nil && x.Confidence != nil {
		return *x.Confidence
	}
	return 0
}

type PulseRepetitionInterval struct {
	state                    protoimpl.MessageState    `protogen:"open.v1"`
	PulseRepetitionIntervalS *PulseRepetitionIntervalS `protobuf:"bytes,1,opt,name=pulseRepetitionIntervalS,proto3,oneof" json:"pulseRepetitionIntervalS,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PulseRepetitionInterval) Reset() {
	*x = PulseRepetitionInterval{}
	mi := &file_components_signal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulseRepetitionInterval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseRepetitionInterval) ProtoMessage() {}

func (x *PulseRepetitionInterval) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseRepetitionInterval.ProtoReflect.Descriptor instead.
func (*PulseRepetitionInterval) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{5}
}

func (x *PulseRepetitionInterval) GetPulseRepetitionIntervalS() *PulseRepetitionIntervalS {
	if x != nil {
		return x.PulseRepetitionIntervalS
	}
	return nil
}

type PulseRepetitionIntervalS struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float64               `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Sigma         *float64               `protobuf:"fixed64,2,opt,name=sigma,proto3,oneof" json:"sigma,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PulseRepetitionIntervalS) Reset() {
	*x = PulseRepetitionIntervalS{}
	mi := &file_components_signal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulseRepetitionIntervalS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulseRepetitionIntervalS) ProtoMessage() {}

func (x *PulseRepetitionIntervalS) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulseRepetitionIntervalS.ProtoReflect.Descriptor instead.
func (*PulseRepetitionIntervalS) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{6}
}

func (x *PulseRepetitionIntervalS) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *PulseRepetitionIntervalS) GetSigma() float64 {
	if x != nil && x.Sigma != nil {
		return *x.Sigma
	}
	return 0
}

type ScanCharacteristics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScanType      *ScanType              `protobuf:"varint,1,opt,name=scanType,proto3,enum=components.ScanType,oneof" json:"scanType,omitempty"`
	ScanPeriodS   *float64               `protobuf:"fixed64,2,opt,name=scanPeriodS,proto3,oneof" json:"scanPeriodS,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScanCharacteristics) Reset() {
	*x = ScanCharacteristics{}
	mi := &file_components_signal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScanCharacteristics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanCharacteristics) ProtoMessage() {}

func (x *ScanCharacteristics) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanCharacteristics.ProtoReflect.Descriptor instead.
func (*ScanCharacteristics) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{7}
}

func (x *ScanCharacteristics) GetScanType() ScanType {
	if x != nil && x.ScanType != nil {
		return *x.ScanType
	}
	return ScanType_SCAN_TYPE_INVALID
}

func (x *ScanCharacteristics) GetScanPeriodS() float64 {
	if x != nil && x.ScanPeriodS != nil {
		return *x.ScanPeriodS
	}
	return 0
}

type FrequencyHz struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *float64               `protobuf:"fixed64,1,opt,name=value,proto3,oneof" json:"value,omitempty"`
	Sigma         *float64               `protobuf:"fixed64,2,opt,name=sigma,proto3,oneof" json:"sigma,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrequencyHz) Reset() {
	*x = FrequencyHz{}
	mi := &file_components_signal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyHz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyHz) ProtoMessage() {}

func (x *FrequencyHz) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyHz.ProtoReflect.Descriptor instead.
func (*FrequencyHz) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{8}
}

func (x *FrequencyHz) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *FrequencyHz) GetSigma() float64 {
	if x != nil && x.Sigma != nil {
		return *x.Sigma
	}
	return 0
}

type MinimumFrequencyRangeHz struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrequencyHz   *FrequencyHz           `protobuf:"bytes,1,opt,name=frequencyHz,proto3,oneof" json:"frequencyHz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinimumFrequencyRangeHz) Reset() {
	*x = MinimumFrequencyRangeHz{}
	mi := &file_components_signal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinimumFrequencyRangeHz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinimumFrequencyRangeHz) ProtoMessage() {}

func (x *MinimumFrequencyRangeHz) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinimumFrequencyRangeHz.ProtoReflect.Descriptor instead.
func (*MinimumFrequencyRangeHz) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{9}
}

func (x *MinimumFrequencyRangeHz) GetFrequencyHz() *FrequencyHz {
	if x != nil {
		return x.FrequencyHz
	}
	return nil
}

type MaximumFrequencyRangeHz struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrequencyHz   *FrequencyHz           `protobuf:"bytes,1,opt,name=frequencyHz,proto3,oneof" json:"frequencyHz,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaximumFrequencyRangeHz) Reset() {
	*x = MaximumFrequencyRangeHz{}
	mi := &file_components_signal_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaximumFrequencyRangeHz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaximumFrequencyRangeHz) ProtoMessage() {}

func (x *MaximumFrequencyRangeHz) ProtoReflect() protoreflect.Message {
	mi := &file_components_signal_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaximumFrequencyRangeHz.ProtoReflect.Descriptor instead.
func (*MaximumFrequencyRangeHz) Descriptor() ([]byte, []int) {
	return file_components_signal_proto_rawDescGZIP(), []int{10}
}

func (x *MaximumFrequencyRangeHz) GetFrequencyHz() *FrequencyHz {
	if x != nil {
		return x.FrequencyHz
	}
	return nil
}

var File_components_signal_proto protoreflect.FileDescriptor

const file_components_signal_proto_rawDesc = "" +
	"\n" +
	"\x17components/signal.proto\x12\n" +
	"components\x1a\x18components/tracked.proto\"\xc7\x06\n" +
	"\x06Signal\x12J\n" +
	"\x0ffrequencyCenter\x18\x01 \x01(\v2\x1b.components.FrequencyCenterH\x00R\x0ffrequencyCenter\x88\x01\x01\x12G\n" +
	"\x0efrequencyRange\x18\x02 \x01(\v2\x1a.components.FrequencyRangeH\x01R\x0efrequencyRange\x88\x01\x01\x12%\n" +
	"\vbandwidthHz\x18\x03 \x01(\x01H\x02R\vbandwidthHz\x88\x01\x01\x123\n" +
	"\x12signalToNoiseRatio\x18\x04 \x01(\x01H\x03R\x12signalToNoiseRatio\x88\x01\x01\x12D\n" +
	"\rlineOfBearing\x18\x05 \x01(\v2\x19.components.LineOfBearingH\x04R\rlineOfBearing\x88\x01\x01\x12,\n" +
	"\x05fixed\x18\x06 \x01(\v2\x11.components.FixedH\x05R\x05fixed\x88\x01\x01\x12G\n" +
	"\x10emitterNotations\x18\a \x03(\v2\x1b.components.EmitterNotationR\x10emitterNotations\x12%\n" +
	"\vpulseWidthS\x18\b \x01(\x01H\x06R\vpulseWidthS\x88\x01\x01\x12b\n" +
	"\x17pulseRepetitionInterval\x18\t \x01(\v2#.components.PulseRepetitionIntervalH\aR\x17pulseRepetitionInterval\x88\x01\x01\x12V\n" +
	"\x13scanCharacteristics\x18\n" +
	" \x01(\v2\x1f.components.ScanCharacteristicsH\bR\x13scanCharacteristics\x88\x01\x01B\x12\n" +
	"\x10_frequencyCenterB\x11\n" +
	"\x0f_frequencyRangeB\x0e\n" +
	"\f_bandwidthHzB\x15\n" +
	"\x13_signalToNoiseRatioB\x10\n" +
	"\x0e_lineOfBearingB\b\n" +
	"\x06_fixedB\x0e\n" +
	"\f_pulseWidthSB\x1a\n" +
	"\x18_pulseRepetitionIntervalB\x16\n" +
	"\x14_scanCharacteristics\"a\n" +
	"\x0fFrequencyCenter\x12>\n" +
	"\vfrequencyHz\x18\x01 \x01(\v2\x17.components.FrequencyHzH\x00R\vfrequencyHz\x88\x01\x01B\x0e\n" +
	"\f_frequencyHz\"\x90\x02\n" +
	"\x0eFrequencyRange\x12b\n" +
	"\x17minimumFrequencyRangeHz\x18\x01 \x01(\v2#.components.MinimumFrequencyRangeHzH\x00R\x17minimumFrequencyRangeHz\x88\x01\x01\x12b\n" +
	"\x17maximumFrequencyRangeHz\x18\x02 \x01(\v2#.components.MaximumFrequencyRangeHzH\x01R\x17maximumFrequencyRangeHz\x88\x01\x01B\x1a\n" +
	"\x18_minimumFrequencyRangeHzB\x1a\n" +
	"\x18_maximumFrequencyRangeHz\"\a\n" +
	"\x05Fixed\"\x88\x01\n" +
	"\x0fEmitterNotation\x12-\n" +
	"\x0femitterNotation\x18\x01 \x01(\tH\x00R\x0femitterNotation\x88\x01\x01\x12#\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x01H\x01R\n" +
	"confidence\x88\x01\x01B\x12\n" +
	"\x10_emitterNotationB\r\n" +
	"\v_confidence\"\x9d\x01\n" +
	"\x17PulseRepetitionInterval\x12e\n" +
	"\x18pulseRepetitionIntervalS\x18\x01 \x01(\v2$.components.PulseRepetitionIntervalSH\x00R\x18pulseRepetitionIntervalS\x88\x01\x01B\x1b\n" +
	"\x19_pulseRepetitionIntervalS\"d\n" +
	"\x18PulseRepetitionIntervalS\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x01H\x00R\x05value\x88\x01\x01\x12\x19\n" +
	"\x05sigma\x18\x02 \x01(\x01H\x01R\x05sigma\x88\x01\x01B\b\n" +
	"\x06_valueB\b\n" +
	"\x06_sigma\"\x90\x01\n" +
	"\x13ScanCharacteristics\x125\n" +
	"\bscanType\x18\x01 \x01(\x0e2\x14.components.ScanTypeH\x00R\bscanType\x88\x01\x01\x12%\n" +
	"\vscanPeriodS\x18\x02 \x01(\x01H\x01R\vscanPeriodS\x88\x01\x01B\v\n" +
	"\t_scanTypeB\x0e\n" +
	"\f_scanPeriodS\"W\n" +
	"\vFrequencyHz\x12\x19\n" +
	"\x05value\x18\x01 \x01(\x01H\x00R\x05value\x88\x01\x01\x12\x19\n" +
	"\x05sigma\x18\x02 \x01(\x01H\x01R\x05sigma\x88\x01\x01B\b\n" +
	"\x06_valueB\b\n" +
	"\x06_sigma\"i\n" +
	"\x17MinimumFrequencyRangeHz\x12>\n" +
	"\vfrequencyHz\x18\x01 \x01(\v2\x17.components.FrequencyHzH\x00R\vfrequencyHz\x88\x01\x01B\x0e\n" +
	"\f_frequencyHz\"i\n" +
	"\x17MaximumFrequencyRangeHz\x12>\n" +
	"\vfrequencyHz\x18\x01 \x01(\v2\x17.components.FrequencyHzH\x00R\vfrequencyHz\x88\x01\x01B\x0e\n" +
	"\f_frequencyHz*\xbc\x04\n" +
	"\bScanType\x12\x15\n" +
	"\x11SCAN_TYPE_INVALID\x10\x00\x12\x16\n" +
	"\x12SCAN_TYPE_CIRCULAR\x10\x01\x12-\n" +
	")SCAN_TYPE_BIDIRECTIONAL_HORIZONTAL_SECTOR\x10\x02\x12+\n" +
	"'SCAN_TYPE_BIDIRECTIONAL_VERTICAL_SECTOR\x10\x03\x12\x1a\n" +
	"\x16SCAN_TYPE_NON_SCANNING\x10\x04\x12\x17\n" +
	"\x13SCAN_TYPE_IRREGULAR\x10\x05\x12\x15\n" +
	"\x11SCAN_TYPE_CONICAL\x10\x06\x12\x1c\n" +
	"\x18SCAN_TYPE_LOBE_SWITCHING\x10\a\x12\x14\n" +
	"\x10SCAN_TYPE_RASTER\x10\b\x12&\n" +
	"\"SCAN_TYPE_CIRCULAR_VERTICAL_SECTOR\x10\t\x12\x1e\n" +
	"\x1aSCAN_TYPE_CIRCULAR_CONICAL\x10\n" +
	"\x12\x1c\n" +
	"\x18SCAN_TYPE_SECTOR_CONICAL\x10\v\x12\x18\n" +
	"\x14SCAN_TYPE_AGILE_BEAM\x10\f\x12,\n" +
	"(SCAN_TYPE_UNIDIRECTIONAL_VERTICAL_SECTOR\x10\r\x12.\n" +
	"*SCAN_TYPE_UNIDIRECTIONAL_HORIZONTAL_SECTOR\x10\x0e\x12#\n" +
	"\x1fSCAN_TYPE_UNIDIRECTIONAL_SECTOR\x10\x0f\x12\"\n" +
	"\x1eSCAN_TYPE_BIDIRECTIONAL_SECTOR\x10\x10B\rZ\v/componentsb\x06proto3"

var (
	file_components_signal_proto_rawDescOnce sync.Once
	file_components_signal_proto_rawDescData []byte
)

func file_components_signal_proto_rawDescGZIP() []byte {
	file_components_signal_proto_rawDescOnce.Do(func() {
		file_components_signal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_components_signal_proto_rawDesc), len(file_components_signal_proto_rawDesc)))
	})
	return file_components_signal_proto_rawDescData
}

var file_components_signal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_components_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_components_signal_proto_goTypes = []any{
	(ScanType)(0),                    // 0: components.ScanType
	(*Signal)(nil),                   // 1: components.Signal
	(*FrequencyCenter)(nil),          // 2: components.FrequencyCenter
	(*FrequencyRange)(nil),           // 3: components.FrequencyRange
	(*Fixed)(nil),                    // 4: components.Fixed
	(*EmitterNotation)(nil),          // 5: components.EmitterNotation
	(*PulseRepetitionInterval)(nil),  // 6: components.PulseRepetitionInterval
	(*PulseRepetitionIntervalS)(nil), // 7: components.PulseRepetitionIntervalS
	(*ScanCharacteristics)(nil),      // 8: components.ScanCharacteristics
	(*FrequencyHz)(nil),              // 9: components.FrequencyHz
	(*MinimumFrequencyRangeHz)(nil),  // 10: components.MinimumFrequencyRangeHz
	(*MaximumFrequencyRangeHz)(nil),  // 11: components.MaximumFrequencyRangeHz
	(*LineOfBearing)(nil),            // 12: components.LineOfBearing
}
var file_components_signal_proto_depIdxs = []int32{
	2,  // 0: components.Signal.frequencyCenter:type_name -> components.FrequencyCenter
	3,  // 1: components.Signal.frequencyRange:type_name -> components.FrequencyRange
	12, // 2: components.Signal.lineOfBearing:type_name -> components.LineOfBearing
	4,  // 3: components.Signal.fixed:type_name -> components.Fixed
	5,  // 4: components.Signal.emitterNotations:type_name -> components.EmitterNotation
	6,  // 5: components.Signal.pulseRepetitionInterval:type_name -> components.PulseRepetitionInterval
	8,  // 6: components.Signal.scanCharacteristics:type_name -> components.ScanCharacteristics
	9,  // 7: components.FrequencyCenter.frequencyHz:type_name -> components.FrequencyHz
	10, // 8: components.FrequencyRange.minimumFrequencyRangeHz:type_name -> components.MinimumFrequencyRangeHz
	11, // 9: components.FrequencyRange.maximumFrequencyRangeHz:type_name -> components.MaximumFrequencyRangeHz
	7,  // 10: components.PulseRepetitionInterval.pulseRepetitionIntervalS:type_name -> components.PulseRepetitionIntervalS
	0,  // 11: components.ScanCharacteristics.scanType:type_name -> components.ScanType
	9,  // 12: components.MinimumFrequencyRangeHz.frequencyHz:type_name -> components.FrequencyHz
	9,  // 13: components.MaximumFrequencyRangeHz.frequencyHz:type_name -> components.FrequencyHz
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_components_signal_proto_init() }
func file_components_signal_proto_init() {
	if File_components_signal_proto != nil {
		return
	}
	file_components_tracked_proto_init()
	file_components_signal_proto_msgTypes[0].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[1].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[2].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[4].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[5].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[6].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[7].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[8].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[9].OneofWrappers = []any{}
	file_components_signal_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_components_signal_proto_rawDesc), len(file_components_signal_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_components_signal_proto_goTypes,
		DependencyIndexes: file_components_signal_proto_depIdxs,
		EnumInfos:         file_components_signal_proto_enumTypes,
		MessageInfos:      file_components_signal_proto_msgTypes,
	}.Build()
	File_components_signal_proto = out.File
	file_components_signal_proto_goTypes = nil
	file_components_signal_proto_depIdxs = nil
}
