// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: components/sensors.proto

package components

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SensorType int32

const (
	SensorType_SENSOR_TYPE_INVALID     SensorType = 0
	SensorType_SENSOR_TYPE_RADAR       SensorType = 1
	SensorType_SENSOR_TYPE_CAMERA      SensorType = 2
	SensorType_SENSOR_TYPE_TRANSPONDER SensorType = 3
	SensorType_SENSOR_TYPE_RF          SensorType = 4
	SensorType_SENSOR_TYPE_GPS         SensorType = 5
	SensorType_SENSOR_TYPE_PTU_POS     SensorType = 6
	SensorType_SENSOR_TYPE_PERIMETER   SensorType = 7
	SensorType_SENSOR_TYPE_SONAR       SensorType = 8
)

// Enum value maps for SensorType.
var (
	SensorType_name = map[int32]string{
		0: "SENSOR_TYPE_INVALID",
		1: "SENSOR_TYPE_RADAR",
		2: "SENSOR_TYPE_CAMERA",
		3: "SENSOR_TYPE_TRANSPONDER",
		4: "SENSOR_TYPE_RF",
		5: "SENSOR_TYPE_GPS",
		6: "SENSOR_TYPE_PTU_POS",
		7: "SENSOR_TYPE_PERIMETER",
		8: "SENSOR_TYPE_SONAR",
	}
	SensorType_value = map[string]int32{
		"SENSOR_TYPE_INVALID":     0,
		"SENSOR_TYPE_RADAR":       1,
		"SENSOR_TYPE_CAMERA":      2,
		"SENSOR_TYPE_TRANSPONDER": 3,
		"SENSOR_TYPE_RF":          4,
		"SENSOR_TYPE_GPS":         5,
		"SENSOR_TYPE_PTU_POS":     6,
		"SENSOR_TYPE_PERIMETER":   7,
		"SENSOR_TYPE_SONAR":       8,
	}
)

func (x SensorType) Enum() *SensorType {
	p := new(SensorType)
	*p = x
	return p
}

func (x SensorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SensorType) Descriptor() protoreflect.EnumDescriptor {
	return file_components_sensors_proto_enumTypes[0].Descriptor()
}

func (SensorType) Type() protoreflect.EnumType {
	return &file_components_sensors_proto_enumTypes[0]
}

func (x SensorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SensorType.Descriptor instead.
func (SensorType) EnumDescriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{0}
}

type OperationalState int32

const (
	OperationalState_OPERATIONAL_STATE_INVALID         OperationalState = 0
	OperationalState_OPERATIONAL_STATE_OFF             OperationalState = 1
	OperationalState_OPERATIONAL_STATE_NON_OPERATIONAL OperationalState = 2
	OperationalState_OPERATIONAL_STATE_DEGRADED        OperationalState = 3
	OperationalState_OPERATIONAL_STATE_OPERATIONAL     OperationalState = 4
	OperationalState_OPERATIONAL_STATE_DENIED          OperationalState = 5
)

// Enum value maps for OperationalState.
var (
	OperationalState_name = map[int32]string{
		0: "OPERATIONAL_STATE_INVALID",
		1: "OPERATIONAL_STATE_OFF",
		2: "OPERATIONAL_STATE_NON_OPERATIONAL",
		3: "OPERATIONAL_STATE_DEGRADED",
		4: "OPERATIONAL_STATE_OPERATIONAL",
		5: "OPERATIONAL_STATE_DENIED",
	}
	OperationalState_value = map[string]int32{
		"OPERATIONAL_STATE_INVALID":         0,
		"OPERATIONAL_STATE_OFF":             1,
		"OPERATIONAL_STATE_NON_OPERATIONAL": 2,
		"OPERATIONAL_STATE_DEGRADED":        3,
		"OPERATIONAL_STATE_OPERATIONAL":     4,
		"OPERATIONAL_STATE_DENIED":          5,
	}
)

func (x OperationalState) Enum() *OperationalState {
	p := new(OperationalState)
	*p = x
	return p
}

func (x OperationalState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationalState) Descriptor() protoreflect.EnumDescriptor {
	return file_components_sensors_proto_enumTypes[1].Descriptor()
}

func (OperationalState) Type() protoreflect.EnumType {
	return &file_components_sensors_proto_enumTypes[1]
}

func (x OperationalState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationalState.Descriptor instead.
func (OperationalState) EnumDescriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{1}
}

type Mode int32

const (
	Mode_SENSOR_MODE_INVALID              Mode = 0
	Mode_SENSOR_MODE_SEARCH               Mode = 1
	Mode_SENSOR_MODE_TRACK                Mode = 2
	Mode_SENSOR_MODE_WEAPON_SUPPORT       Mode = 3
	Mode_SENSOR_MODE_AUTOSENSOR_MODE_MUTE Mode = 4
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "SENSOR_MODE_INVALID",
		1: "SENSOR_MODE_SEARCH",
		2: "SENSOR_MODE_TRACK",
		3: "SENSOR_MODE_WEAPON_SUPPORT",
		4: "SENSOR_MODE_AUTOSENSOR_MODE_MUTE",
	}
	Mode_value = map[string]int32{
		"SENSOR_MODE_INVALID":              0,
		"SENSOR_MODE_SEARCH":               1,
		"SENSOR_MODE_TRACK":                2,
		"SENSOR_MODE_WEAPON_SUPPORT":       3,
		"SENSOR_MODE_AUTOSENSOR_MODE_MUTE": 4,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_components_sensors_proto_enumTypes[2].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_components_sensors_proto_enumTypes[2]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{2}
}

type Sensors struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sensors       []*Sensor              `protobuf:"bytes,1,rep,name=sensors,proto3" json:"sensors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sensors) Reset() {
	*x = Sensors{}
	mi := &file_components_sensors_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sensors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensors) ProtoMessage() {}

func (x *Sensors) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensors.ProtoReflect.Descriptor instead.
func (*Sensors) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{0}
}

func (x *Sensors) GetSensors() []*Sensor {
	if x != nil {
		return x.Sensors
	}
	return nil
}

type Sensor struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SensorId               *string                `protobuf:"bytes,1,opt,name=sensorId,proto3,oneof" json:"sensorId,omitempty"`
	OperationalState       *OperationalState      `protobuf:"varint,2,opt,name=operationalState,proto3,enum=components.OperationalState,oneof" json:"operationalState,omitempty"`
	SensorType             *SensorType            `protobuf:"varint,3,opt,name=sensorType,proto3,enum=components.SensorType,oneof" json:"sensorType,omitempty"`
	SensorDescription      *string                `protobuf:"bytes,4,opt,name=sensorDescription,proto3,oneof" json:"sensorDescription,omitempty"`
	RfConfiguration        *RFConfiguration       `protobuf:"bytes,5,opt,name=rfConfiguration,proto3,oneof" json:"rfConfiguration,omitempty"`
	LastDetectionTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=lastDetectionTimestamp,proto3,oneof" json:"lastDetectionTimestamp,omitempty"`
	FieldsOfView           []*FieldOfView         `protobuf:"bytes,7,rep,name=fieldsOfView,proto3" json:"fieldsOfView,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Sensor) Reset() {
	*x = Sensor{}
	mi := &file_components_sensors_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sensor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sensor) ProtoMessage() {}

func (x *Sensor) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sensor.ProtoReflect.Descriptor instead.
func (*Sensor) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{1}
}

func (x *Sensor) GetSensorId() string {
	if x != nil && x.SensorId != nil {
		return *x.SensorId
	}
	return ""
}

func (x *Sensor) GetOperationalState() OperationalState {
	if x != nil && x.OperationalState != nil {
		return *x.OperationalState
	}
	return OperationalState_OPERATIONAL_STATE_INVALID
}

func (x *Sensor) GetSensorType() SensorType {
	if x != nil && x.SensorType != nil {
		return *x.SensorType
	}
	return SensorType_SENSOR_TYPE_INVALID
}

func (x *Sensor) GetSensorDescription() string {
	if x != nil && x.SensorDescription != nil {
		return *x.SensorDescription
	}
	return ""
}

func (x *Sensor) GetRfConfiguration() *RFConfiguration {
	if x != nil {
		return x.RfConfiguration
	}
	return nil
}

func (x *Sensor) GetLastDetectionTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastDetectionTimestamp
	}
	return nil
}

func (x *Sensor) GetFieldsOfView() []*FieldOfView {
	if x != nil {
		return x.FieldsOfView
	}
	return nil
}

type RFConfiguration struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FrequencyRangeHz []*FrequencyRangeHz    `protobuf:"bytes,1,rep,name=frequencyRangeHz,proto3" json:"frequencyRangeHz,omitempty"`
	BandwidthRangeHz []*BandwidthRangeHz    `protobuf:"bytes,2,rep,name=bandwidthRangeHz,proto3" json:"bandwidthRangeHz,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RFConfiguration) Reset() {
	*x = RFConfiguration{}
	mi := &file_components_sensors_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RFConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RFConfiguration) ProtoMessage() {}

func (x *RFConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RFConfiguration.ProtoReflect.Descriptor instead.
func (*RFConfiguration) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{2}
}

func (x *RFConfiguration) GetFrequencyRangeHz() []*FrequencyRangeHz {
	if x != nil {
		return x.FrequencyRangeHz
	}
	return nil
}

func (x *RFConfiguration) GetBandwidthRangeHz() []*BandwidthRangeHz {
	if x != nil {
		return x.BandwidthRangeHz
	}
	return nil
}

type FrequencyRangeHz struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	MinimumFrequencyRangeHz *MinimumFrequencyRangeHz `protobuf:"bytes,1,opt,name=minimumFrequencyRangeHz,proto3,oneof" json:"minimumFrequencyRangeHz,omitempty"`
	MaximumFrequencyRangeHz *MaximumFrequencyRangeHz `protobuf:"bytes,2,opt,name=maximumFrequencyRangeHz,proto3,oneof" json:"maximumFrequencyRangeHz,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FrequencyRangeHz) Reset() {
	*x = FrequencyRangeHz{}
	mi := &file_components_sensors_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrequencyRangeHz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrequencyRangeHz) ProtoMessage() {}

func (x *FrequencyRangeHz) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrequencyRangeHz.ProtoReflect.Descriptor instead.
func (*FrequencyRangeHz) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{3}
}

func (x *FrequencyRangeHz) GetMinimumFrequencyRangeHz() *MinimumFrequencyRangeHz {
	if x != nil {
		return x.MinimumFrequencyRangeHz
	}
	return nil
}

func (x *FrequencyRangeHz) GetMaximumFrequencyRangeHz() *MaximumFrequencyRangeHz {
	if x != nil {
		return x.MaximumFrequencyRangeHz
	}
	return nil
}

type BandwidthRangeHz struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MinimumBandwidth *MinimumBandwidth      `protobuf:"bytes,1,opt,name=minimumBandwidth,proto3,oneof" json:"minimumBandwidth,omitempty"`
	MaximumBandwidth *MaximumBandwidth      `protobuf:"bytes,2,opt,name=maximumBandwidth,proto3,oneof" json:"maximumBandwidth,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BandwidthRangeHz) Reset() {
	*x = BandwidthRangeHz{}
	mi := &file_components_sensors_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandwidthRangeHz) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandwidthRangeHz) ProtoMessage() {}

func (x *BandwidthRangeHz) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandwidthRangeHz.ProtoReflect.Descriptor instead.
func (*BandwidthRangeHz) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{4}
}

func (x *BandwidthRangeHz) GetMinimumBandwidth() *MinimumBandwidth {
	if x != nil {
		return x.MinimumBandwidth
	}
	return nil
}

func (x *BandwidthRangeHz) GetMaximumBandwidth() *MaximumBandwidth {
	if x != nil {
		return x.MaximumBandwidth
	}
	return nil
}

type MinimumBandwidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BandwidthHz   *float64               `protobuf:"fixed64,1,opt,name=bandwidthHz,proto3,oneof" json:"bandwidthHz,omitempty"` // fixed typo from bandwithHz to bandwidthHz
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MinimumBandwidth) Reset() {
	*x = MinimumBandwidth{}
	mi := &file_components_sensors_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MinimumBandwidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinimumBandwidth) ProtoMessage() {}

func (x *MinimumBandwidth) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinimumBandwidth.ProtoReflect.Descriptor instead.
func (*MinimumBandwidth) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{5}
}

func (x *MinimumBandwidth) GetBandwidthHz() float64 {
	if x != nil && x.BandwidthHz != nil {
		return *x.BandwidthHz
	}
	return 0
}

type MaximumBandwidth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BandwidthHz   *float64               `protobuf:"fixed64,1,opt,name=bandwidthHz,proto3,oneof" json:"bandwidthHz,omitempty"` // fixed typo from bandwithHz to bandwidthHz
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MaximumBandwidth) Reset() {
	*x = MaximumBandwidth{}
	mi := &file_components_sensors_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MaximumBandwidth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaximumBandwidth) ProtoMessage() {}

func (x *MaximumBandwidth) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaximumBandwidth.ProtoReflect.Descriptor instead.
func (*MaximumBandwidth) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{6}
}

func (x *MaximumBandwidth) GetBandwidthHz() float64 {
	if x != nil && x.BandwidthHz != nil {
		return *x.BandwidthHz
	}
	return 0
}

type FieldOfView struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	FovId              *int32                 `protobuf:"varint,1,opt,name=fovId,proto3,oneof" json:"fovId,omitempty"`
	MountId            *string                `protobuf:"bytes,2,opt,name=mountId,proto3,oneof" json:"mountId,omitempty"`
	ProjectFrustum     *ProjectFrustum        `protobuf:"bytes,3,opt,name=projectFrustum,proto3,oneof" json:"projectFrustum,omitempty"`
	ProjectedCenterRay *Position              `protobuf:"bytes,4,opt,name=projectedCenterRay,proto3,oneof" json:"projectedCenterRay,omitempty"`
	CenterRayPose      *RelativePose          `protobuf:"bytes,5,opt,name=centerRayPose,proto3,oneof" json:"centerRayPose,omitempty"`
	HorizontalFov      *float32               `protobuf:"fixed32,6,opt,name=horizontalFov,proto3,oneof" json:"horizontalFov,omitempty"`
	VerticalFov        *float32               `protobuf:"fixed32,7,opt,name=verticalFov,proto3,oneof" json:"verticalFov,omitempty"`
	Range              *float32               `protobuf:"fixed32,8,opt,name=range,proto3,oneof" json:"range,omitempty"`
	Mode               *Mode                  `protobuf:"varint,9,opt,name=mode,proto3,enum=components.Mode,oneof" json:"mode,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FieldOfView) Reset() {
	*x = FieldOfView{}
	mi := &file_components_sensors_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOfView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOfView) ProtoMessage() {}

func (x *FieldOfView) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOfView.ProtoReflect.Descriptor instead.
func (*FieldOfView) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{7}
}

func (x *FieldOfView) GetFovId() int32 {
	if x != nil && x.FovId != nil {
		return *x.FovId
	}
	return 0
}

func (x *FieldOfView) GetMountId() string {
	if x != nil && x.MountId != nil {
		return *x.MountId
	}
	return ""
}

func (x *FieldOfView) GetProjectFrustum() *ProjectFrustum {
	if x != nil {
		return x.ProjectFrustum
	}
	return nil
}

func (x *FieldOfView) GetProjectedCenterRay() *Position {
	if x != nil {
		return x.ProjectedCenterRay
	}
	return nil
}

func (x *FieldOfView) GetCenterRayPose() *RelativePose {
	if x != nil {
		return x.CenterRayPose
	}
	return nil
}

func (x *FieldOfView) GetHorizontalFov() float32 {
	if x != nil && x.HorizontalFov != nil {
		return *x.HorizontalFov
	}
	return 0
}

func (x *FieldOfView) GetVerticalFov() float32 {
	if x != nil && x.VerticalFov != nil {
		return *x.VerticalFov
	}
	return 0
}

func (x *FieldOfView) GetRange() float32 {
	if x != nil && x.Range != nil {
		return *x.Range
	}
	return 0
}

func (x *FieldOfView) GetMode() Mode {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return Mode_SENSOR_MODE_INVALID
}

type ProjectFrustum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpperLeft     *Position              `protobuf:"bytes,1,opt,name=upperLeft,proto3,oneof" json:"upperLeft,omitempty"`
	UpperRight    *Position              `protobuf:"bytes,2,opt,name=upperRight,proto3,oneof" json:"upperRight,omitempty"`
	BottomRight   *Position              `protobuf:"bytes,3,opt,name=bottomRight,proto3,oneof" json:"bottomRight,omitempty"`
	BottomLeft    *Position              `protobuf:"bytes,4,opt,name=bottomLeft,proto3,oneof" json:"bottomLeft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectFrustum) Reset() {
	*x = ProjectFrustum{}
	mi := &file_components_sensors_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectFrustum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectFrustum) ProtoMessage() {}

func (x *ProjectFrustum) ProtoReflect() protoreflect.Message {
	mi := &file_components_sensors_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectFrustum.ProtoReflect.Descriptor instead.
func (*ProjectFrustum) Descriptor() ([]byte, []int) {
	return file_components_sensors_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectFrustum) GetUpperLeft() *Position {
	if x != nil {
		return x.UpperLeft
	}
	return nil
}

func (x *ProjectFrustum) GetUpperRight() *Position {
	if x != nil {
		return x.UpperRight
	}
	return nil
}

func (x *ProjectFrustum) GetBottomRight() *Position {
	if x != nil {
		return x.BottomRight
	}
	return nil
}

func (x *ProjectFrustum) GetBottomLeft() *Position {
	if x != nil {
		return x.BottomLeft
	}
	return nil
}

var File_components_sensors_proto protoreflect.FileDescriptor

const file_components_sensors_proto_rawDesc = "" +
	"\n" +
	"\x18components/sensors.proto\x12\n" +
	"components\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17components/signal.proto\x1a\x18components/tracked.proto\x1a\x19components/position.proto\"7\n" +
	"\aSensors\x12,\n" +
	"\asensors\x18\x01 \x03(\v2\x12.components.SensorR\asensors\"\xc0\x04\n" +
	"\x06Sensor\x12\x1f\n" +
	"\bsensorId\x18\x01 \x01(\tH\x00R\bsensorId\x88\x01\x01\x12M\n" +
	"\x10operationalState\x18\x02 \x01(\x0e2\x1c.components.OperationalStateH\x01R\x10operationalState\x88\x01\x01\x12;\n" +
	"\n" +
	"sensorType\x18\x03 \x01(\x0e2\x16.components.SensorTypeH\x02R\n" +
	"sensorType\x88\x01\x01\x121\n" +
	"\x11sensorDescription\x18\x04 \x01(\tH\x03R\x11sensorDescription\x88\x01\x01\x12J\n" +
	"\x0frfConfiguration\x18\x05 \x01(\v2\x1b.components.RFConfigurationH\x04R\x0frfConfiguration\x88\x01\x01\x12W\n" +
	"\x16lastDetectionTimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x05R\x16lastDetectionTimestamp\x88\x01\x01\x12;\n" +
	"\ffieldsOfView\x18\a \x03(\v2\x17.components.FieldOfViewR\ffieldsOfViewB\v\n" +
	"\t_sensorIdB\x13\n" +
	"\x11_operationalStateB\r\n" +
	"\v_sensorTypeB\x14\n" +
	"\x12_sensorDescriptionB\x12\n" +
	"\x10_rfConfigurationB\x19\n" +
	"\x17_lastDetectionTimestamp\"\xa5\x01\n" +
	"\x0fRFConfiguration\x12H\n" +
	"\x10frequencyRangeHz\x18\x01 \x03(\v2\x1c.components.FrequencyRangeHzR\x10frequencyRangeHz\x12H\n" +
	"\x10bandwidthRangeHz\x18\x02 \x03(\v2\x1c.components.BandwidthRangeHzR\x10bandwidthRangeHz\"\x92\x02\n" +
	"\x10FrequencyRangeHz\x12b\n" +
	"\x17minimumFrequencyRangeHz\x18\x01 \x01(\v2#.components.MinimumFrequencyRangeHzH\x00R\x17minimumFrequencyRangeHz\x88\x01\x01\x12b\n" +
	"\x17maximumFrequencyRangeHz\x18\x02 \x01(\v2#.components.MaximumFrequencyRangeHzH\x01R\x17maximumFrequencyRangeHz\x88\x01\x01B\x1a\n" +
	"\x18_minimumFrequencyRangeHzB\x1a\n" +
	"\x18_maximumFrequencyRangeHz\"\xda\x01\n" +
	"\x10BandwidthRangeHz\x12M\n" +
	"\x10minimumBandwidth\x18\x01 \x01(\v2\x1c.components.MinimumBandwidthH\x00R\x10minimumBandwidth\x88\x01\x01\x12M\n" +
	"\x10maximumBandwidth\x18\x02 \x01(\v2\x1c.components.MaximumBandwidthH\x01R\x10maximumBandwidth\x88\x01\x01B\x13\n" +
	"\x11_minimumBandwidthB\x13\n" +
	"\x11_maximumBandwidth\"I\n" +
	"\x10MinimumBandwidth\x12%\n" +
	"\vbandwidthHz\x18\x01 \x01(\x01H\x00R\vbandwidthHz\x88\x01\x01B\x0e\n" +
	"\f_bandwidthHz\"I\n" +
	"\x10MaximumBandwidth\x12%\n" +
	"\vbandwidthHz\x18\x01 \x01(\x01H\x00R\vbandwidthHz\x88\x01\x01B\x0e\n" +
	"\f_bandwidthHz\"\xbf\x04\n" +
	"\vFieldOfView\x12\x19\n" +
	"\x05fovId\x18\x01 \x01(\x05H\x00R\x05fovId\x88\x01\x01\x12\x1d\n" +
	"\amountId\x18\x02 \x01(\tH\x01R\amountId\x88\x01\x01\x12G\n" +
	"\x0eprojectFrustum\x18\x03 \x01(\v2\x1a.components.ProjectFrustumH\x02R\x0eprojectFrustum\x88\x01\x01\x12I\n" +
	"\x12projectedCenterRay\x18\x04 \x01(\v2\x14.components.PositionH\x03R\x12projectedCenterRay\x88\x01\x01\x12C\n" +
	"\rcenterRayPose\x18\x05 \x01(\v2\x18.components.RelativePoseH\x04R\rcenterRayPose\x88\x01\x01\x12)\n" +
	"\rhorizontalFov\x18\x06 \x01(\x02H\x05R\rhorizontalFov\x88\x01\x01\x12%\n" +
	"\vverticalFov\x18\a \x01(\x02H\x06R\vverticalFov\x88\x01\x01\x12\x19\n" +
	"\x05range\x18\b \x01(\x02H\aR\x05range\x88\x01\x01\x12)\n" +
	"\x04mode\x18\t \x01(\x0e2\x10.components.ModeH\bR\x04mode\x88\x01\x01B\b\n" +
	"\x06_fovIdB\n" +
	"\n" +
	"\b_mountIdB\x11\n" +
	"\x0f_projectFrustumB\x15\n" +
	"\x13_projectedCenterRayB\x10\n" +
	"\x0e_centerRayPoseB\x10\n" +
	"\x0e_horizontalFovB\x0e\n" +
	"\f_verticalFovB\b\n" +
	"\x06_rangeB\a\n" +
	"\x05_mode\"\xb8\x02\n" +
	"\x0eProjectFrustum\x127\n" +
	"\tupperLeft\x18\x01 \x01(\v2\x14.components.PositionH\x00R\tupperLeft\x88\x01\x01\x129\n" +
	"\n" +
	"upperRight\x18\x02 \x01(\v2\x14.components.PositionH\x01R\n" +
	"upperRight\x88\x01\x01\x12;\n" +
	"\vbottomRight\x18\x03 \x01(\v2\x14.components.PositionH\x02R\vbottomRight\x88\x01\x01\x129\n" +
	"\n" +
	"bottomLeft\x18\x04 \x01(\v2\x14.components.PositionH\x03R\n" +
	"bottomLeft\x88\x01\x01B\f\n" +
	"\n" +
	"_upperLeftB\r\n" +
	"\v_upperRightB\x0e\n" +
	"\f_bottomRightB\r\n" +
	"\v_bottomLeft*\xe5\x01\n" +
	"\n" +
	"SensorType\x12\x17\n" +
	"\x13SENSOR_TYPE_INVALID\x10\x00\x12\x15\n" +
	"\x11SENSOR_TYPE_RADAR\x10\x01\x12\x16\n" +
	"\x12SENSOR_TYPE_CAMERA\x10\x02\x12\x1b\n" +
	"\x17SENSOR_TYPE_TRANSPONDER\x10\x03\x12\x12\n" +
	"\x0eSENSOR_TYPE_RF\x10\x04\x12\x13\n" +
	"\x0fSENSOR_TYPE_GPS\x10\x05\x12\x17\n" +
	"\x13SENSOR_TYPE_PTU_POS\x10\x06\x12\x19\n" +
	"\x15SENSOR_TYPE_PERIMETER\x10\a\x12\x15\n" +
	"\x11SENSOR_TYPE_SONAR\x10\b*\xd4\x01\n" +
	"\x10OperationalState\x12\x1d\n" +
	"\x19OPERATIONAL_STATE_INVALID\x10\x00\x12\x19\n" +
	"\x15OPERATIONAL_STATE_OFF\x10\x01\x12%\n" +
	"!OPERATIONAL_STATE_NON_OPERATIONAL\x10\x02\x12\x1e\n" +
	"\x1aOPERATIONAL_STATE_DEGRADED\x10\x03\x12!\n" +
	"\x1dOPERATIONAL_STATE_OPERATIONAL\x10\x04\x12\x1c\n" +
	"\x18OPERATIONAL_STATE_DENIED\x10\x05*\x94\x01\n" +
	"\x04Mode\x12\x17\n" +
	"\x13SENSOR_MODE_INVALID\x10\x00\x12\x16\n" +
	"\x12SENSOR_MODE_SEARCH\x10\x01\x12\x15\n" +
	"\x11SENSOR_MODE_TRACK\x10\x02\x12\x1e\n" +
	"\x1aSENSOR_MODE_WEAPON_SUPPORT\x10\x03\x12$\n" +
	" SENSOR_MODE_AUTOSENSOR_MODE_MUTE\x10\x04B\rZ\v/componentsb\x06proto3"

var (
	file_components_sensors_proto_rawDescOnce sync.Once
	file_components_sensors_proto_rawDescData []byte
)

func file_components_sensors_proto_rawDescGZIP() []byte {
	file_components_sensors_proto_rawDescOnce.Do(func() {
		file_components_sensors_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_components_sensors_proto_rawDesc), len(file_components_sensors_proto_rawDesc)))
	})
	return file_components_sensors_proto_rawDescData
}

var file_components_sensors_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_components_sensors_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_components_sensors_proto_goTypes = []any{
	(SensorType)(0),                 // 0: components.SensorType
	(OperationalState)(0),           // 1: components.OperationalState
	(Mode)(0),                       // 2: components.Mode
	(*Sensors)(nil),                 // 3: components.Sensors
	(*Sensor)(nil),                  // 4: components.Sensor
	(*RFConfiguration)(nil),         // 5: components.RFConfiguration
	(*FrequencyRangeHz)(nil),        // 6: components.FrequencyRangeHz
	(*BandwidthRangeHz)(nil),        // 7: components.BandwidthRangeHz
	(*MinimumBandwidth)(nil),        // 8: components.MinimumBandwidth
	(*MaximumBandwidth)(nil),        // 9: components.MaximumBandwidth
	(*FieldOfView)(nil),             // 10: components.FieldOfView
	(*ProjectFrustum)(nil),          // 11: components.ProjectFrustum
	(*timestamppb.Timestamp)(nil),   // 12: google.protobuf.Timestamp
	(*MinimumFrequencyRangeHz)(nil), // 13: components.MinimumFrequencyRangeHz
	(*MaximumFrequencyRangeHz)(nil), // 14: components.MaximumFrequencyRangeHz
	(*Position)(nil),                // 15: components.Position
	(*RelativePose)(nil),            // 16: components.RelativePose
}
var file_components_sensors_proto_depIdxs = []int32{
	4,  // 0: components.Sensors.sensors:type_name -> components.Sensor
	1,  // 1: components.Sensor.operationalState:type_name -> components.OperationalState
	0,  // 2: components.Sensor.sensorType:type_name -> components.SensorType
	5,  // 3: components.Sensor.rfConfiguration:type_name -> components.RFConfiguration
	12, // 4: components.Sensor.lastDetectionTimestamp:type_name -> google.protobuf.Timestamp
	10, // 5: components.Sensor.fieldsOfView:type_name -> components.FieldOfView
	6,  // 6: components.RFConfiguration.frequencyRangeHz:type_name -> components.FrequencyRangeHz
	7,  // 7: components.RFConfiguration.bandwidthRangeHz:type_name -> components.BandwidthRangeHz
	13, // 8: components.FrequencyRangeHz.minimumFrequencyRangeHz:type_name -> components.MinimumFrequencyRangeHz
	14, // 9: components.FrequencyRangeHz.maximumFrequencyRangeHz:type_name -> components.MaximumFrequencyRangeHz
	8,  // 10: components.BandwidthRangeHz.minimumBandwidth:type_name -> components.MinimumBandwidth
	9,  // 11: components.BandwidthRangeHz.maximumBandwidth:type_name -> components.MaximumBandwidth
	11, // 12: components.FieldOfView.projectFrustum:type_name -> components.ProjectFrustum
	15, // 13: components.FieldOfView.projectedCenterRay:type_name -> components.Position
	16, // 14: components.FieldOfView.centerRayPose:type_name -> components.RelativePose
	2,  // 15: components.FieldOfView.mode:type_name -> components.Mode
	15, // 16: components.ProjectFrustum.upperLeft:type_name -> components.Position
	15, // 17: components.ProjectFrustum.upperRight:type_name -> components.Position
	15, // 18: components.ProjectFrustum.bottomRight:type_name -> components.Position
	15, // 19: components.ProjectFrustum.bottomLeft:type_name -> components.Position
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_components_sensors_proto_init() }
func file_components_sensors_proto_init() {
	if File_components_sensors_proto != nil {
		return
	}
	file_components_signal_proto_init()
	file_components_tracked_proto_init()
	file_components_position_proto_init()
	file_components_sensors_proto_msgTypes[1].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[3].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[4].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[5].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[6].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[7].OneofWrappers = []any{}
	file_components_sensors_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_components_sensors_proto_rawDesc), len(file_components_sensors_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_components_sensors_proto_goTypes,
		DependencyIndexes: file_components_sensors_proto_depIdxs,
		EnumInfos:         file_components_sensors_proto_enumTypes,
		MessageInfos:      file_components_sensors_proto_msgTypes,
	}.Build()
	File_components_sensors_proto = out.File
	file_components_sensors_proto_goTypes = nil
	file_components_sensors_proto_depIdxs = nil
}
