// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: components/ontology.proto

package components

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Template int32

const (
	Template_TEMPLATE_INVALID                  Template = 0
	Template_TEMPLATE_TRACK                    Template = 1
	Template_TEMPLATE_SENSOR_POINT_OF_INTEREST Template = 2
	Template_TEMPLATE_ASSET                    Template = 3
	Template_TEMPLATE_GEO                      Template = 4
	Template_TEMPLATE_SIGNAL_OF_INTEREST       Template = 5
)

// Enum value maps for Template.
var (
	Template_name = map[int32]string{
		0: "TEMPLATE_INVALID",
		1: "TEMPLATE_TRACK",
		2: "TEMPLATE_SENSOR_POINT_OF_INTEREST",
		3: "TEMPLATE_ASSET",
		4: "TEMPLATE_GEO",
		5: "TEMPLATE_SIGNAL_OF_INTEREST",
	}
	Template_value = map[string]int32{
		"TEMPLATE_INVALID":                  0,
		"TEMPLATE_TRACK":                    1,
		"TEMPLATE_SENSOR_POINT_OF_INTEREST": 2,
		"TEMPLATE_ASSET":                    3,
		"TEMPLATE_GEO":                      4,
		"TEMPLATE_SIGNAL_OF_INTEREST":       5,
	}
)

func (x Template) Enum() *Template {
	p := new(Template)
	*p = x
	return p
}

func (x Template) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Template) Descriptor() protoreflect.EnumDescriptor {
	return file_components_ontology_proto_enumTypes[0].Descriptor()
}

func (Template) Type() protoreflect.EnumType {
	return &file_components_ontology_proto_enumTypes[0]
}

func (x Template) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Template.Descriptor instead.
func (Template) EnumDescriptor() ([]byte, []int) {
	return file_components_ontology_proto_rawDescGZIP(), []int{0}
}

type Ontology struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlatformType  *string                `protobuf:"bytes,1,opt,name=platformType,proto3,oneof" json:"platformType,omitempty"`
	SpecificType  *string                `protobuf:"bytes,2,opt,name=specificType,proto3,oneof" json:"specificType,omitempty"`
	Template      *Template              `protobuf:"varint,3,opt,name=template,proto3,enum=components.Template,oneof" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ontology) Reset() {
	*x = Ontology{}
	mi := &file_components_ontology_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ontology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ontology) ProtoMessage() {}

func (x *Ontology) ProtoReflect() protoreflect.Message {
	mi := &file_components_ontology_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ontology.ProtoReflect.Descriptor instead.
func (*Ontology) Descriptor() ([]byte, []int) {
	return file_components_ontology_proto_rawDescGZIP(), []int{0}
}

func (x *Ontology) GetPlatformType() string {
	if x != nil && x.PlatformType != nil {
		return *x.PlatformType
	}
	return ""
}

func (x *Ontology) GetSpecificType() string {
	if x != nil && x.SpecificType != nil {
		return *x.SpecificType
	}
	return ""
}

func (x *Ontology) GetTemplate() Template {
	if x != nil && x.Template != nil {
		return *x.Template
	}
	return Template_TEMPLATE_INVALID
}

var File_components_ontology_proto protoreflect.FileDescriptor

const file_components_ontology_proto_rawDesc = "" +
	"\n" +
	"\x19components/ontology.proto\x12\n" +
	"components\"\xc2\x01\n" +
	"\bOntology\x12'\n" +
	"\fplatformType\x18\x01 \x01(\tH\x00R\fplatformType\x88\x01\x01\x12'\n" +
	"\fspecificType\x18\x02 \x01(\tH\x01R\fspecificType\x88\x01\x01\x125\n" +
	"\btemplate\x18\x03 \x01(\x0e2\x14.components.TemplateH\x02R\btemplate\x88\x01\x01B\x0f\n" +
	"\r_platformTypeB\x0f\n" +
	"\r_specificTypeB\v\n" +
	"\t_template*\xa2\x01\n" +
	"\bTemplate\x12\x14\n" +
	"\x10TEMPLATE_INVALID\x10\x00\x12\x12\n" +
	"\x0eTEMPLATE_TRACK\x10\x01\x12%\n" +
	"!TEMPLATE_SENSOR_POINT_OF_INTEREST\x10\x02\x12\x12\n" +
	"\x0eTEMPLATE_ASSET\x10\x03\x12\x10\n" +
	"\fTEMPLATE_GEO\x10\x04\x12\x1f\n" +
	"\x1bTEMPLATE_SIGNAL_OF_INTEREST\x10\x05B\rZ\v/componentsb\x06proto3"

var (
	file_components_ontology_proto_rawDescOnce sync.Once
	file_components_ontology_proto_rawDescData []byte
)

func file_components_ontology_proto_rawDescGZIP() []byte {
	file_components_ontology_proto_rawDescOnce.Do(func() {
		file_components_ontology_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_components_ontology_proto_rawDesc), len(file_components_ontology_proto_rawDesc)))
	})
	return file_components_ontology_proto_rawDescData
}

var file_components_ontology_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_components_ontology_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_components_ontology_proto_goTypes = []any{
	(Template)(0),    // 0: components.Template
	(*Ontology)(nil), // 1: components.Ontology
}
var file_components_ontology_proto_depIdxs = []int32{
	0, // 0: components.Ontology.template:type_name -> components.Template
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_components_ontology_proto_init() }
func file_components_ontology_proto_init() {
	if File_components_ontology_proto != nil {
		return
	}
	file_components_ontology_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_components_ontology_proto_rawDesc), len(file_components_ontology_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_components_ontology_proto_goTypes,
		DependencyIndexes: file_components_ontology_proto_depIdxs,
		EnumInfos:         file_components_ontology_proto_enumTypes,
		MessageInfos:      file_components_ontology_proto_msgTypes,
	}.Build()
	File_components_ontology_proto = out.File
	file_components_ontology_proto_goTypes = nil
	file_components_ontology_proto_depIdxs = nil
}
